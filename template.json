{
	//Welcome to the Z80 Studio config file!

	//***PORTS***

	/*
	There are exactly 256 ports (identified with hex labels 0x00 - 0xFF) available for use on the Z80 processor. What these ports do and how they behave is entirely system-dependent. They may be used for graphics, sound, etc. Port types currently supported are:

		- Controller (modifies certain parameters of other ports)
		- Audio (AudioBuffer)
	*/

	//Port bindings
	"ports" : {
		//No ports are bound by default, so here are some examples:

		/*

		//Audio port example
		"00" : {

			//Specifies port type, audio in this case
			"type" : "audio",

			//Specifies number of bytes to accumulate before dumping (playing) the audio buffer
			"bufferSize" : 256,
			
			//Specifies audio bit depth. Must be a power of 2 between 1 and 256 (inclusive). If this data is modified by a controller, it is incremented by 1 (so writing FF sets it to 256, and 00 sets it to 1). If the data written is not a power of 2, nothing will happen.
			"bitDepth" : 8

		}
		
		*/

		/*

		//Controller port example (in this example, controlling the previous audio port, 00)
		"01" : {
	
			//Specifies port type, controller in this case
			"type" : "controller",

			//Now we must specify the port and parameter to modify
			"modifies" : {
				//Specifies port ID (1-byte hex string)
				"port" : "00",

				//Specifies param to mod
				"param" : "bitDepth",

				//(OPTIONAL) Specifies the context (type) of this port's data (e.g. Is it the higher part of a 16-bit int, with the lower part being provided by a 2nd controller port? Is it a boolean? Is it signed?). This field is usually "byte" (unsigned 8-bit int). Defaults to "byte" if not specified.
				//Possible values:
				//	- "byte"   (unsigned 8-bit int, or lower part of a Uint16)
				//	- "lower"  (same as "byte" but more context-ey/human-readable)
				//	- "higher" (higher part of a Uint16)
				//	- "signed" (signed 8-bit int)
				//	- "bool"   (if 0x00, evaluates to false, otherwise true)
				"type" : "byte"

				//Now bytes written to this port will instead modify the "bitDepth" of port 00! 
			}

		}

		*/
	}
}